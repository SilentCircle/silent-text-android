check_variable "${DEPENDENCY_DIR}" "DEPENDENCY_DIR"
check_variable "${DOWNLOAD_SITE}" "DOWNLOAD_SITE"

ANDROID_NDK_DOWNLOAD_URL_Linux_x86="${DOWNLOAD_SITE}/com/google/android/android-ndk-linux-x86/r9c/android-ndk-linux-x86-r9c.tar.bz2"
ANDROID_NDK_DOWNLOAD_URL_Linux_x86_64="${DOWNLOAD_SITE}/com/google/android/android-ndk-linux-x86_64/r9c/android-ndk-linux-x86_64-r9c.tar.bz2"
ANDROID_NDK_DOWNLOAD_URL_Darwin_x86="${DOWNLOAD_SITE}/com/google/android/android-ndk-darwin-x86/r9c/android-ndk-darwin-x86-r9c.tar.bz2"
ANDROID_NDK_DOWNLOAD_URL_Darwin_x86_64="${DOWNLOAD_SITE}/com/google/android/android-ndk-darwin-x86_64/r9c/android-ndk-darwin-x86_64-r9c.tar.bz2"

detect_android_ndk() {
  detected="${ANDROID_NDK_HOME}"
  program="ndk-build"
  target="$(which ${program})"
  if [ ! -z "${target}" ]; then
    [ -d "${detected}" ] || detected=$( [ -h "${target}" ] && cd $(dirname "${target}") && cd $(dirname $(ls -l "${program}" | sed -E 's/^.+-> (.+)$/\1/g')) && pwd )
    [ -d "${detected}" ] || detected=$(dirname "${target}")
  fi
  [ -d "${detected}" ] && ANDROID_NDK_HOME="${detected}"
}

install_android_ndk() {
  detect_android_ndk
  PACKAGE_ARCHIVE_URL=""
  [ -z "${ANDROID_NDK_HOME}" ] && export ANDROID_NDK_HOME="$1"
  case "${OS_TYPE}_${OS_ARCH}" in
    Darwin_x86_64)
      PACKAGE_ARCHIVE_URL="${ANDROID_NDK_DOWNLOAD_URL_Darwin_x86_64}"
      ;;
    Darwin_i[3|4|5|6]86)
      PACKAGE_ARCHIVE_URL="${ANDROID_NDK_DOWNLOAD_URL_Darwin_x86}"
      ;;
    Linux_x86_64)
      PACKAGE_ARCHIVE_URL="${ANDROID_NDK_DOWNLOAD_URL_Linux_x86_64}"
      ;;
    Linux_i[3|4|5|6]86)
      PACKAGE_ARCHIVE_URL="${ANDROID_NDK_DOWNLOAD_URL_Linux_x86}"
      ;;
    *)
      printf "[ERROR] Unsupported operating system: ${OS_TYPE} ${OS_ARCH}\n"
      exit 1
      ;;
  esac
  [ ! -z "${PACKAGE_ARCHIVE_URL}" ] && install_file "Android NDK" "${PACKAGE_ARCHIVE_URL}" "j" "android-ndk-r9c" "${ANDROID_NDK_HOME}"
}

install_android_ndk "${DEPENDENCY_DIR}/android-ndk"
